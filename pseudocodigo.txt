a)

----------------------------
          Biestable
----------------------------

Class Biestable begin

    Estado estado

    Biestable() begin
        estado <- Rojo
    end

    void abrir() begin
        estado.abrir(this)
    end

    void cerrar() begin
        estado.cerrar(this)
    end

    void setEstado(Estado estado) begin
        this.estado <- estado
    end

    void estado() begin
        this.estado.estado(this)
    end
end

----------------------------
          Estado
----------------------------

abstract Class Estado begin
    abstract void abrir(Biestable biestable)
    abstract void cerrar(Biestable biestable)
    abstract void estado(Biestable biestable)
end

----------------------------
          Rojo
----------------------------

class Rojo hereda de Estado begin
    
    void abrir(Biestable biestable) begin
        biestable.setEstado(new Verde())
    end

    void cerrar(Biestable biestable) begin
        //Lanzar error
        new error "No se puede cerrar estando en el estado rojo"
    end

    void estado(Biestable biestable) begin
        Imprimir "Cerrado"
    end
end

----------------------------
          Verde
----------------------------


class Verde hereda de Estado begin

    void abrir(Biestable biestable) begin
        //Lanzar error
        new error "No se puede abrir estando en el estado verde"
    end

    void cerrar(Biestable biestable) begin
        biestable.setEstado(new Rojo())
    end

    void estado(Biestable biestable) begin
        Imprimir "Abierto"
    end
end


b)

----------------------------
          Buffer
----------------------------


Interface Buffer begin
    void abrir()
    void cerrar()
    void estado()
    void setEstado(Estado estado)
end


----------------------------
          Biestable
----------------------------

Class Biestable implementa Buffer begin

    Estado estado

    Biestable() begin
        estado <- Rojo
    end

    void abrir() begin
        estado.abrir(this)
    end

    void cerrar() begin
        estado.cerrar(this)
    end

    void setEstado(Estado estado) begin
        this.estado <- estado
    end

    void estado() begin
        this.estado.estado(this)
    end
end

----------------------------
          Triestable
----------------------------


class Triestable implementa Buffer begin

    Estado estado

    Triestable() begin
        this.estado <- new Rojo()
    end

    void abrir() begin
        estado.abrir(this)
    end

    void cerrar() begin
        estado.cerrar(this)
    end

    void setEstado(Estado estado) begin
        this.estado <- estado
    end

    void estado() begin
        this.estado.estado(this)
    end
end


----------------------------
          Estado
----------------------------

abstract Class Estado begin
    abstract void abrir(Buffer buffer)
    abstract void cerrar(Buffer buffer)
    abstract void estado(Buffer buffer)
end

----------------------------
          Rojo
----------------------------

class Rojo hereda de Estado begin
    
    void abrir(Buffer buffer) begin
        if buffer esInstanciaDe Biestable begin
            buffer.setEstado(new Verde())
        else begin
            buffer.setEstado(new Amarillo())
        end
    end

    void cerrar(Buffer buffer) begin
        //Lanzar error
        new error "No se puede cerrar estando en el estado rojo"
    end

    void estado(Buffer buffer) begin
        Imprimir "Cerrado"
    end
end

----------------------------
          Verde
----------------------------


class Verde hereda de Estado begin

    void abrir(Buffer buffer) begin
        //Lanzar error
        new error "No se puede abrir estando en el estado verde"
    end

    void cerrar(Buffer buffer) begin
        if buffer esInstanciaDe Biestable begin
            buffer.setEstado(new Rojo())
        else begin
            buffer.setEstado(new Amarillo())
        end
    end

    void estado(Buffer buffer) begin
        Imprimir "Abierto"
    end
end


----------------------------
          Amarillo
----------------------------

class Amarillo hereda de Estado begin
    
    void abrir(Buffer buffer) begin
        if (buffer instanceof Biestable) begin
            //Lanzar error
            new error "Un biestable no puede estar en el estado amarillo"
        else
            buffer.setEstado(new Verde())
        end
    end

    void cerrar(Buffer buffer) begin
        if buffer instanceof Biestable begin
        //Lanzar error  
            new error "Un biestable no puede estar en el estado amarillo"
        else
            buffer.setEstado(new Rojo())
        end
    end

    void estado(Buffer buffer) begin
        Imprimir "precaucion"
    end
end






c)

----------------------------
          Buffer
----------------------------


Interface Buffer begin
    void abrir()
    void cerrar()
    void estado()
    void setEstado(Estado estado)
end


----------------------------
          Biestable
----------------------------

Class Biestable implementa Buffer begin

    Estado estado
    Buffer buffer

    Biestable() begin
        estado <- Rojo
        buffer <- null
    end

    void abrir() begin
        if buffer == null begin
            estado.abrir(this)
        else
            buffer.abrir()
        end
    end

    void cerrar() begin
        if buffer == null begin
            estado.cerrar(this)
        else
            buffer.cerrar()
        end
    end

    void setEstado(Estado estado) begin
        this.estado <- estado
    end

    void estado() begin
        if (buffer == null) {
            this.estado.estado(this)
        } else {
            buffer.estado()
        }
    end

    void cambio() begin
        buffer <- new Triestable(new Amarillo())
    end

end

----------------------------
          Triestable
----------------------------


class Triestable implementa Buffer begin

    Estado estado

    Triestable() begin
        this.estado <- new Rojo()
    end

    void abrir() begin
        estado.abrir(this)
    end

    void cerrar() begin
        estado.cerrar(this)
    end

    void setEstado(Estado estado) begin
        this.estado <- estado
    end

    void estado() begin
        this.estado.estado(this)
    end
end

----------------------------
          Estado
----------------------------

abstract Class Estado begin
    abstract void abrir(Buffer buffer)
    abstract void cerrar(Buffer buffer)
    abstract void estado(Buffer buffer)
end

----------------------------
          Rojo
----------------------------

class Rojo begin
    
    void abrir(Buffer Buffer) begin
        Buffer.setEstado(new Verde())
    end

    void cerrar(Buffer Buffer) begin
        //Lanzar error
        new error "No se puede cerrar estando en el estado rojo"
    end

    void estado(Buffer Buffer) begin
        Imprimir "Cerrado"
    end
end

----------------------------
          Verde
----------------------------


class Verde hereda de Estado begin

    void abrir(Buffer buffer) begin
        //Lanzar error
        new error "No se puede abrir estando en el estado verde"
    end

    void cerrar(Buffer buffer) begin
        if buffer esInstanciaDe Biestable begin
            buffer.setEstado(new Rojo())
        else begin
            buffer.setEstado(new Amarillo())
        end
    end

    void estado(Buffer buffer) begin
        Imprimir "Abierto"
    end
end


----------------------------
          Amarillo
----------------------------

class Amarillo hereda de Estado begin
    
    void abrir(Buffer buffer) begin
        if (buffer instanceof Biestable) begin
            //Lanzar error
            new error "Un biestable no puede estar en el estado amarillo"
        else
            buffer.setEstado(new Verde())
        end
    end

    void cerrar(Buffer buffer) begin
        if buffer instanceof Biestable begin
        //Lanzar error  
            new error "Un biestable no puede estar en el estado amarillo"
        else
            buffer.setEstado(new Rojo())
        end
    end

    void estado(Buffer buffer) begin
        Imprimir "precaucion"
    end
end